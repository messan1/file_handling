/// <reference types="node" />
import Bucket from "./bucket";
import { FileData, FileUploadOptions } from "./file";
/** @internal */
export default class SinglePartUpload {
    private bucket;
    private info;
    private _inUse;
    get inUse(): boolean;
    private constructor();
    /** Create a new single part uploader by requesting a new upload url from B2. */
    static requestNew(bucket: Bucket): Promise<SinglePartUpload>;
    /** @private */
    private _upload;
    /**
     * @returns `false` when this single part upload is no longer valid.
     */
    upload(name: string, stream: NodeJS.ReadableStream | Buffer, opts: FileUploadOptions & {
        contentLength: number;
    }): Promise<FileData | false>;
    /**
     * @returns `false` when this single part upload is no longer valid.
     */
    upload(fileName: string, buffer: Buffer, options: FileUploadOptions): Promise<FileData | false>;
}
//# sourceMappingURL=single-part-upload.d.ts.map